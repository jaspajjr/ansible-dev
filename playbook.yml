---
- name: Dev Environment
  hosts: all
  gather_facts: true
  become: yes
  vars:
    - user: "johndoe"
    - dotfiles_src: "https://github.com/thoughtbot/dotfiles.git"

  tasks:
    - name: Base applications
      apt:
        name: [
          "git",
          "tmux",
          "vim"
        ]
        state: present
        update_cache: yes
        cache_valid_time: 3600
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
      tags:
        - apt
        - core_apps

    - name: "Set-up user"
      user:
        name: "{{ user }}"
        state: present
        groups: sudo
        append: yes
        home: "/home/{{ user }}"
        shell: /bin/bash
      tags:
        - user

    - name: "Clone dotfiles"
      git:
        repo: "{{ dotfiles_src }}"
        dest: "/home/{{ user }}/dotfiles"
        version: master
        update: yes
      tags:
        - dotfiles

    - name: "Own dotfiles"
      file:
        path: "/home/{{ user }}/dotfiles"
        recurse: yes
        owner: "{{ user }}"
        group: "{{ user }}"
      tags:
        - dotfiles

    - name: "Install Ansible pre-reqs"
      apt:
        name: software-properties-common
        state: present
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
      tags:
        - apt
        - ansible

    - name: "Install Ansible key"
      apt_key:
        keyserver: keyserver.ubuntu.com
        id: 93C4A3FD7BB9C367
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
      tags:
        - apt
        - ansible

    - name: "Add Ansible repository"
      apt_repository:
        repo: ppa:ansible/ansible
        state: present
        codename: "{{ ansible_distribution_release }}"
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
      tags:
        - apt
        - ansible

    - name: "Update apt cache"
      apt:
        update_cache: yes
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
      tags:
        - apt
        - ansible

    - name: "Install ansible"
      apt:
        name: [
          "ansible",
          "ansible-lint"
        ]
        state: present
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
      tags:
        - apt
        - ansible

    - name: "Install docker pre-reqs"
      apt:
        name: [
          "apt-transport-https",
          "ca-certificates",
          "curl",
          "gnupg-agent",
          "python3",
          "python3-pip",
          "software-properties-common"
        ]
        state: present
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
      tags:
        - apt
        - docker

    - name: "Install docker repository key"
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        id: "9DC858229FC7DD38854AE2D88D81803C0EBFCD88"
        state: present
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
      tags:
        - apt
        - docker

    - name: "Install docker repository"
      apt_repository:
          repo: "deb https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release | lower }} stable"
          state: present
          update_cache: yes
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
      tags:
        - apt
        - docker

    - name: "Install docker"
      apt:
        name: [
          "docker-ce",
          "docker-ce-cli",
          "containerd.io"
        ]
        state: present
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
      register: docker_install
      tags:
        - apt
        - docker

    - name: "Add user to docker group"
      user:
        name: "{{ user }}"
        groups: docker
        append: yes
        state: present
      when: docker_install is succeeded
      tags:
        - docker
        - user

    - name: "Schedule docker system prune"
      cron:
        name: "Docker_prune"
        job: "docker system prune -f"
        state: present
        minute: "0"
        hour: "20"
        day: "*"
        month: "*"
      tags:
        - cron
        - docker
        - housekeeping

    - name: "Clean up apt"
      apt:
        autoclean: yes
        autoremove: yes
      tags:
        - apt
        - housekeeping

    - name: "Schedule ansible pull"
      cron:
        name: ansible-pull
        job: >
          "ansible-pull playbook.yml -U https://github.com/jaspajjr/ansible-dev.git
          -d /etc/ansible-pull-config/
          -e "user={{ user }} dotfiles_src={{ dotfiles_src }}"
          -c="local"
          --clean"
        state: present
        minute: "0"
        hour: "18"
        day: "*"
        month: "*"
      tags:
        - cron
        - ansible-pull
...